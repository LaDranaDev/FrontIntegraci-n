proxy_cache_path /tmp/nginx levels=1:2 keys_zone=cache:1m inactive=24h use_temp_path=off;
server {
    listen 8080;
    server_name localhost;
	client_max_body_size 30M;
    client_header_buffer_size 16k;
    large_client_header_buffers 4 16k;
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

#   auth_request /oauth;

#	location /oauth {
	#This address is where Vouch will be listening on
#	 proxy_pass <%= ENV["VALIDA_SESION_ENDPOINT"] %>;
#	 proxy_method POST;
#	 proxy_pass_request_headers on;
#	 proxy_pass_request_body on;
#	 proxy_set_header LocalCookie $cookie_LocalCookie;
#	 proxy_set_header Accept application/json;
#	 proxy_set_header Content-Type application/json;
#	}

	error_page  401  /error401;
    location /error401 {
        return 302 <%= ENV["URL_H2H_USUARIOS"] %>;
    }

	location /nginx_status {
        stub_status on;
        access_log   off;
        allow 127.0.0.1;
        allow 10.1.0.0/16;
        deny all;
    }

    <% if ENV["CONFIG_ENDPOINT"] %>

        location = /config.json {

            add_header X-Config-Overriden true;
            proxy_pass <%= ENV["CONFIG_ENDPOINT"] %>;
            proxy_cache cache;  # habilita la cache
            proxy_cache_lock on; # si llegan varias peticiones en paralelo solo se realiza una al backend
            proxy_cache_valid 200 5m; # cache durante 5 minutos las peticiones 200 del backend
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504 http_403 http_404; # mantiene el elmento de cache en caso de expirar, cuando da esos errores el backend
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
        }

    <% end %>

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    error_page  400 403 404  /40x.html;
    location = /40x.html {
        root   /usr/share/nginx/html;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}
